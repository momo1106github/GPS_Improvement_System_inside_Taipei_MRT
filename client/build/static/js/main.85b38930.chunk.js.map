{"version":3,"sources":["Components/Header.js","Components/Map.js","Containers/Recorder.js","hooks/useRoute.js","hooks/useSensor.js","Containers/MapController.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Map","mapContainer","lng","lat","zoom","onMove","ref","Recorder","sendAudio","useState","record","setRecord","mimeType","onStop","recordedBlob","onData","console","log","strokeColor","timeSlice","backgroundColor","onClick","type","useRoute","setLng","setLat","process","blob","a","formData","FormData","append","axios","post","headers","Accept","result","parseFloat","data","useSensor","bearing","setBearing","orientation","sensor","AbsoluteOrientationSensor","frequency","Promise","all","navigator","permissions","query","name","then","results","every","state","addEventListener","euler","THREE","quaternion","setFromQuaternion","z","event","error","start","mapboxgl","accessToken","MapController","useRef","map","marker","setMarker","useEffect","current","flyTo","center","setLngLat","addTo","container","style","pitch","Marker","color","draggable","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85b38930.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>GPS Improment System</h1>\n      <p>\n        This Website helps you to improve your GPS location when taking the Taipei MRT.\n      </p>\n    </div>\n  );\n};\n\nexport default Header;","const Map = ({mapContainer, lng, lat, zoom, onMove}) => {\n  return (\n    <div>\n      <div className=\"sidebar\">\n        Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\n      </div>\n      <div ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n};\nexport default Map;","import { useState } from \"react\";\nimport { ReactMic } from \"react-mic\";\n\nconst Recorder = ({ sendAudio }) => {\n  // const [blob, setBlob] = useState(null);\n  const [record, setRecord] = useState(false);\n\n  const startRecording = () => {\n    setRecord(true);\n  };\n\n  const stopRecording = () => {\n    setRecord(false);\n  };\n\n  const onData = (recordedBlob) => {\n    console.log(\"chunk of real-time data is: \", recordedBlob);\n    // console.log(recordedBlob)\n    // sendAudio(recordedBlob)\n  };\n\n  const onStop = (recordedBlob) => {\n    // console.log('recordedBlob is: ', recordedBlob);\n    sendAudio(recordedBlob);\n  };\n  return (\n    <div>\n      <ReactMic\n        record={record}\n        mimeType=\"audio/wav\"\n        className=\"sound-wave\"\n        onStop={onStop}\n        onData={onData}\n        strokeColor=\"#000000\"\n        timeSlice={30000}\n        backgroundColor=\"#FF4081\"\n      />\n      <button onClick={startRecording} type=\"button\">\n        Start\n      </button>\n      <button onClick={stopRecording} type=\"button\">\n        Stop\n      </button>\n    </div>\n  );\n};\nexport default Recorder;\n","import axios from \"axios\";\nimport { useState } from \"react\";\n\nconst useRoute = () => {\n  const [lng, setLng] = useState(121.573145);\n  const [lat, setLat] = useState(24.998241);\n  const development = process.env.NODE_ENV !== 'production'  \n  const url = (development) ? \"http://localhost:5000/audio\":\"https://obscure-spire-00084.herokuapp.com/audio\";\n  console.log(\"development: \", development);\n  const sendAudio = async (blob) => {\n    let formData = new FormData();\n    formData.append(\"wav_file\", blob.blob);\n    const result = await axios.post(\"http://localhost:5000/audio\", formData, {\n      headers: {\n        Accept: \"*/*\",\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n\n    setLng(parseFloat(result.data[0]));\n    setLat(parseFloat(result.data[1]));\n  };\n  return { lng, lat, sendAudio };\n};\nexport default useRoute;\n","import { useState } from \"react\";\nimport * as THREE from \"three\";\nimport { Gyroscope, AbsoluteOrientationSensor } from \"motion-sensors-polyfill\";\n\nconst useSensor = () => {\n  const [bearing, setBearing] = useState(0);\n  \n  const orientation = () => {\n    const options = { frequency: 60 };\n    const sensor = new AbsoluteOrientationSensor(options);\n    Promise.all([\n      navigator.permissions.query({ name: \"accelerometer\" }),\n      navigator.permissions.query({ name: \"magnetometer\" }),\n      navigator.permissions.query({ name: \"gyroscope\" }),\n    ]).then((results) => {\n      if (results.every((result) => result.state === \"granted\")) {\n        sensor.addEventListener(\"reading\", () => {\n          const euler = new THREE.Euler();\n          const quaternion = new THREE.Quaternion(...sensor.quaternion);\n          // console.log(euler.setFromQuaternion(quaternion, \"XYZ\").z);\n          setBearing(45 * euler.setFromQuaternion(quaternion, \"XYZ\").z);\n        });\n        sensor.addEventListener(\"error\", (event) => {\n          if (event.error.name === \"NotReadableError\") {\n            console.log(\"Sensor is not available.\", event);\n          }\n        });\n        sensor.start();\n      } else {\n        console.log(\"No permissions to use AbsoluteOrientationSensor.\");\n      }\n    });\n  };\n  return {\n    bearing,\n    orientation,\n  };\n};\n\nexport default useSensor;\n","import { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line\nimport Map from \"../Components/Map\";\nimport Recorder from \"./Recorder\";\nimport useRoute from \"../hooks/useRoute\";\nimport useSensor from \"../hooks/useSensor\";\n// import orientation from \"../Functions/Orientation\";\n\nmapboxgl.accessToken =\n  \"pk.eyJ1Ijoic2hpbmUtY2hhbmciLCJhIjoiY2tvODhkdGw3MXU2dDJ2bHJrNDZmNHp6ZSJ9.-cSgmT-mTMNGs-to2jNmAw\";\n\nconst MapController = () => {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  const { lat, lng, sendAudio } = useRoute();\n  const [marker, setMarker] = useState(null);\n  const [zoom, setZoom] = useState(13);\n  const { bearing, orientation } = useSensor();\n\n  // const onMove = () => {\n  //   setLng(map.current.getCenter().lng.toFixed(4));\n  //   setLat(map.current.getCenter().lat.toFixed(4));\n  //   setZoom(map.current.getZoom().toFixed(2));\n  // };\n\n  useEffect(() => {\n    if (map.current) {\n      map.current.flyTo({ center: [lng, lat], zoom: 14 });\n      let newMarker = marker;\n      setMarker(newMarker.setLngLat([lng, lat]).addTo(map.current));\n    }\n  }, [lng, lat, marker]);\n\n  useEffect(() => {\n    if (!map.current) return;\n    map.current.setBearing(bearing);\n  }, [bearing]);\n\n  useEffect(() => {\n    if (map.current) return; // initialize map only once\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v11\",\n      center: [lng, lat],\n      pitch: 30,\n      zoom: zoom,\n    });\n    orientation();\n    setMarker(\n      new mapboxgl.Marker({\n        color: \"#1e90ff\",\n        draggable: true,\n      })\n        .setLngLat([lng, lat])\n        .addTo(map.current)\n    );\n  });\n\n  return (\n    <>\n      <Map mapContainer={mapContainer} lng={lng} lat={lat} zoom={zoom}></Map>\n      <Recorder sendAudio={sendAudio} />\n    </>\n  );\n};\nexport default MapController;\n\n// const setUsersLocation = (location) => {\n//   renderMap([data.coords.longitude, data.coords.latitude]);\n//   map.flyTo({ center: [location.longitude, location.latitude] });\n// };\n","import \"./App.css\";\nimport Header from \"./Components/Header\";\nimport MapController from \"./Containers/MapController\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <MapController />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}